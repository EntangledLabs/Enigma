services:
  enigma:
    container_name: enigma
    image: enigma:latest
    build:
      context: .
      dockerfile: ./docker/enigma/Dockerfile
    env_file:
      - ".env"
    environment:
      POSTGRES_HOST: postgres
      RABBITMQ_HOST: rabbitmq
    volumes:
      - ./logs:/app/logs
      - ./static:/app/static
    restart: no
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "ping localhost -c 2"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_interval: 2s


  parable:
    container_name: parable
    image: parable:latest
    build: ./parable
    ports:
      - "5070:5070"
    restart: no
    env_file:
      - ".env"
    environment:
      DB_URL: enigma-postgres
    depends_on:
      enigma:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f -X GET http://localhost:5070/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  discord:
    container_name: praxos
    image: praxos:latest
    build:
      context: .
      dockerfile: ./docker/praxos/Dockerfile
    restart: no
    env_file:
      - ".env"
    environment:
      POSTGRES_HOST: postgres
    volumes:
      - ./logs:/app/logs
    depends_on:
      enigma:
        condition: service_healthy
      postgres:
        condition: service_healthy

  nginx:
    container_name: proxy
    image: 'nginx-enigma:stable-alpine'
    build: docker/nginx
    ports:
     - "80:80"
    restart: unless-stopped
    depends_on:
     parable:
       condition: service_healthy
    healthcheck:
     test: ["CMD-SHELL", "curl", "-f", "http://localhost"]
     interval: 1m30s
     timeout: 10s
     retries: 3
     start_period: 10s
     start_interval: 5s

  postgres:
    container_name: postgres
    image: postgres:alpine
    ports:
      - "5432:5432"
    restart: unless-stopped
    env_file:
      - ".env"
    environment:
      POSTGRES_USER: enigma
      POSTGRES_DB: enigma
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", 'pg_isready -U enigma']
      interval: 5s
      retries: 5
      timeout: 5s
      start_period: 2s

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:4.0.4-alpine
    ports:
      - "5672:5672"
    restart: unless-stopped
    env_file:
      - ".env"
    volumes:
      - rmqdata:/var/lib/rabbitmq

volumes:
  pgdata:
  rmqdata:
  static:
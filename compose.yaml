services:
  enigma:
    container_name: 'enigma'
    image: enigma:latest
    build: ./enigma
    ports:
      - "4731:4731"
    env_file:
      - ".env"
    environment:
      DB_URL: 'postgresql+psycopg://enigma:${POSTGRES_PASSWORD}@enigma-postgres:5432/enigma'
    volumes:
      - ./logs:/enigma_engine/logs:rw
    networks:
      - backend
      - frontend
    restart: no
    depends_on:
      db-enigma:
        condition: service_healthy

  #parable:
    #build: ./parable
    #depends_on:
      #enigma:
        #condition: service_healthy
        #restart: true

  #discord-bot:
    #container_name: enigma_bot
    #build: ./enigma_bot
    #env_file:
    #  - ".env"
    #depends_on:
    #  enigma:
    #    condition: service_started

  #proxy:
  #  container_name: parable-proxy
  #  image: 'nginx:stable-alpine'
  #  ports:
  #    - "80:80"
  #  networks:
  #    - frontend
  #  healthcheck:
  #    test: ["CMD", "curl", "-f", "http://localhost"]
  #    interval: 1m30s
  #    timeout: 10s
  #    retries: 3
  #    start_period: 40s
  #    start_interval: 5s

  db-enigma:
    container_name: 'enigma-postgres'
    image: 'postgres:alpine'
    restart: always
    env_file:
      - ".env"
    environment:
      POSTGRES_USER: enigma
      POSTGRES_DB: enigma
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", 'pg_isready -U enigma']
      interval: 10s
      retries: 5
      timeout: 5s

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge